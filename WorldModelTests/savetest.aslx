<asl version="500">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <game name="savetest"/>
  <object name="start">
    <object name="player">
      <inherit name="defaultplayer" />
    </object>
    <object name="table">
      <inherit name="surface"/>
      <object name="lamp">
        <intattr type="int">1</intattr>
        <stringattr>not updated</stringattr>
        <scriptresult>not run</scriptresult>
        <scriptattr type="script">
          lamp.scriptresult = "run, old"
        </scriptattr>
        <becomesnull>some value</becomesnull>
        <listattr type="list">one; two</listattr>
        <objlistattr type="objectlist">start; player</objlistattr>
        <stringdictionaryattr type="stringdictionary">key1=old1; key2=old2</stringdictionaryattr>
        <objectdictionaryattr type="objectdictionary">key1=table; key2=player</objectdictionaryattr>
        <scriptdictionaryattr type="scriptdictionary">
          <item key="key1">
            lamp.scriptresult = "script key1 old"
          </item>
          <item key="key2">
            lamp.scriptresult = "script key2 old"
          </item>
        </scriptdictionaryattr>
      </object>
    </object>
  </object>
  <command>
    <pattern>update</pattern>
    <script>
      lamp.intattr = 2
      lamp.stringattr = "updated"
      lamp.scriptattr => lamp.scriptresult = "run, new"
      lamp.becomesnull = null
      list add (lamp.listattr, "three")
      list add (lamp.objlistattr, table)
      dictionary add (lamp.stringdictionaryattr, "key3", "value3")
      dictionary remove (lamp.stringdictionaryattr, "key1")
      dictionary add (lamp.stringdictionaryattr, "key1", "value1")
      dictionary add (lamp.objectdictionaryattr, "key3", start)
      dictionary remove (lamp.objectdictionaryattr, "key1")
      dictionary add (lamp.objectdictionaryattr, "key1", lamp)
      newscriptkey1 => lamp.scriptresult = "script key1 new"
      newscriptkey3 => lamp.scriptresult = "script key3 new"
      dictionary add (lamp.scriptdictionaryattr, "key3", newscriptkey3)
      dictionary remove (lamp.scriptdictionaryattr, "key1")
      dictionary add (lamp.scriptdictionaryattr, "key1", newscriptkey1)
    </script>
  </command>
  <command>
    <pattern>run lamp scriptattr</pattern>
    <script>
      invoke (lamp.scriptattr)
    </script>
  </command>
  <command>
    <pattern>run lamp scriptdictionaryattr key1</pattern>
    <script>
      invoke (ScriptDictionaryItem(lamp.scriptdictionaryattr, "key1"))
    </script>
  </command>
  <command>
    <pattern>run lamp scriptdictionaryattr key3</pattern>
    <script>
      invoke (ScriptDictionaryItem(lamp.scriptdictionaryattr, "key3"))
    </script>
  </command>
  <walkthrough name="verify">
    <steps>
      <![CDATA[
      assert:lamp.intattr = 2
      assert:lamp.stringattr = "updated"
      run lamp scriptattr
      assert:lamp.scriptresult = "run, new"
      assert:lamp.becomesnull = null
      assert:ListCount(lamp.listattr) = 3
      assert:ListCount(lamp.objlistattr) = 3
      assert:DictionaryCount(lamp.stringdictionaryattr) = 3
      assert:StringDictionaryItem(lamp.stringdictionaryattr, "key1") = "value1"
      assert:StringDictionaryItem(lamp.stringdictionaryattr, "key3") = "value3"
      assert:DictionaryCount(lamp.objectdictionaryattr) = 3
      assert:ObjectDictionaryItem(lamp.objectdictionaryattr, "key1") = lamp
      assert:ObjectDictionaryItem(lamp.objectdictionaryattr, "key3") = start
      assert:DictionaryCount(lamp.scriptdictionaryattr) = 3
      run lamp scriptdictionaryattr key1
      assert:lamp.scriptresult = "script key1 new"
      run lamp scriptdictionaryattr key3
      assert:lamp.scriptresult = "script key3 new"
      ]]>
    </steps>
  </walkthrough>
</asl>