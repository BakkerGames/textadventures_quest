@model WebEditor.Models.Script
@using AxeSoftware.Quest

<div class="ui-widget-header ui-corner-all toolbar">
    @{
        string addId = "script-" + Model.Attribute + "-add";
    }
    <button type="button" class="script-delete">Delete</button>
</div>

<div>
    @{
        if (Model.Scripts != null) {
            int count = 0;
            foreach (IEditableScript script in Model.Scripts.Scripts)
            {
                IEditorDefinition definition = Model.Controller.GetEditorDefinition(script);
                <div>
                    @foreach (IEditorControl ctl in definition.Controls)
                    {
                        if (ctl.GetBool("breakbefore"))
                        {
                            <br /><text>&nbsp;&nbsp;&nbsp;&nbsp;</text>
                        }
                        else
                        {
                            <text> </text>
                        }
                        object value = ctl.Attribute == null ? null : script.GetParameter(ctl.Attribute);
                        @RenderEditorControl(ctl, value, Model.Attribute + "-" + count.ToString());
                    }
                </div>
                count++;
            }   
        }
    }
</div>

@helper RenderEditorControl(IEditorControl ctl, object value, string attributePrefix)
    {
    string name = attributePrefix + "-" + ctl.Attribute;
    switch (ctl.ControlType)
    {
        case "checkbox":
            @Html.CheckBox(name, value as bool? == true)
            @Html.Label(name, ctl.Caption)
       break;
        case "textbox":
            @Html.TextBox(name, (string)value)
       break;
        case "label":
            @ctl.Caption
       break;
        case "dropdown":
       //Code from ElementEditor.cshtml should be shared
       break;
        case "expression":
       // TO DO: Implement simpleeditor
            @Html.TextBox(name, (string)value, new { style = "width: 350px" })
       break;
        default:
            <text>[@ctl.ControlType]</text>
              break;
    }
}