@model WebEditor.Models.Script
@using AxeSoftware.Quest

@RenderScripts(Model.Scripts, Model.Attribute)

@helper RenderScripts(IEditableScripts scripts, string attribute)
{
    <div class="ui-widget-header ui-corner-all toolbar">
        <button type="button" class="script-add" data-key="@attribute">Add new script</button>
        <button type="button" class="script-delete" data-key="@attribute">Delete</button>
    </div>

    <div>
        @{
            if (scripts != null) {
                int count = 0;
                foreach (IEditableScript script in scripts.Scripts)
                {
                    IEditorDefinition definition = Model.Controller.GetEditorDefinition(script);
                    <div>
                        @Html.CheckBox("selected-" + attribute + "-" + count.ToString(), new { @class = "script-select" })
                        @if (script.Type != ScriptType.If)
                        {
                            foreach (IEditorControl ctl in definition.Controls)
                            {
                                if (ctl.GetBool("breakbefore"))
                                {
                                    <br /><text>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</text>
                                }
                                else
                                {
                                    <text> </text>
                                }
                                object value = ctl.Attribute == null ? null : script.GetParameter(ctl.Attribute);
                                @RenderEditorControl(ctl, value, attribute + "-" + count.ToString())
                            }
                        }
                        else
                        {
                            @RenderIfScript((EditableIfScript)script, attribute + "-" + count.ToString())
                        }
                    </div>
                    count++;
                }
            }
        }
    </div>
}

@helper RenderEditorControl(IEditorControl ctl, object value, string attributePrefix)
{
    string name = attributePrefix + "-" + ctl.Attribute;
    switch (ctl.ControlType)
    {
        case "checkbox":
            @Html.CheckBox(name, value as bool? == true)
            @Html.Label(name, ctl.Caption)
            break;
        case "textbox":
            @Html.TextBox(name, (string)value)
            break;
        case "label":
            @ctl.Caption
            break;
        case "dropdown":
            //Code from ElementEditor.cshtml should be shared
            break;
        case "expression":
            // TO DO: Implement simpleeditor
            @Html.TextBox(name, (string)value, new { style = "width: 350px" })
            break;
        default:
            <text>[@ctl.ControlType]</text>
            break;
    }
}

@helper RenderIfScript(EditableIfScript script, string attributePrefix)
{
    <text>If: </text>
    // TO DO: This needs to use the same expression mechanism as RenderEditorControl
    @Html.TextBox(attributePrefix + "-expression", script.GetAttribute("expression"), new { style = "width: 350px" })
    <text><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Then:<br /></text>
    <div style="margin-left: 54px">
    @RenderScripts(script.ThenScript, attributePrefix + "-then")
    </div>
    
    int elseIfCount = 0;
    foreach (EditableIfScript.EditableElseIf elseIf in script.ElseIfScripts)
    {
        <text>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else If: </text>
        // TO DO: This needs to use the same expression mechanism as RenderEditorControl
        @Html.TextBox(attributePrefix + "-elseif" + elseIfCount.ToString() + "-expression", elseIf.GetAttribute("expression"), new { style = "width: 350px" })
        <div style="margin-left: 54px">
        Then:<br />
        @RenderScripts(elseIf.EditableScripts, attributePrefix + "-elseif" + elseIfCount.ToString())
        </div>

        elseIfCount++;
    }
    
    <button type="button" class="script-if-add-elseif" data-key="@attributePrefix">Add Else If</button>

    if (script.ElseScript == null)
    {
        <button type="button" class="script-if-add-else" data-key="@attributePrefix">Add Else</button>
    }
    else
    {
        <text>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else:<br /></text>
        <div style="margin-left: 54px">
        @RenderScripts(script.ElseScript, attributePrefix + "-else")
        </div>
    }
}