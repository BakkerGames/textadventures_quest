<library>
  <editor>
    <appliesto>@failed</appliesto>

    <control>
      <controltype>label</controltype>
      <caption>Failed to load script:</caption>
    </control>
    
    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
      <colour>Red</colour>
      <multiline/>
      <expand/>
      <breakbefore/>
    </control>
  </editor>
  
  <editor>
    <appliesto>//</appliesto>
    <category>Scripts</category>
    <add>Comment</add>
    <create>// Type comment</create>
    <advanced/>

    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
      <colour>Green</colour>
      <multiline/>
      <expand/>
    </control>

  </editor>
  
  <editor>
    <appliesto>if</appliesto>
    <category>Scripts</category>
    <add>If...</add>
    <create>if ()</create>
    <common>If</common>
    <!-- note: "if" has its own special editor, so it doesn't have any editor definition in this file -->
  </editor>

  <editor>
    <appliesto>firsttime</appliesto>
    <display>The first time, run: #0 - otherwise run: #1</display>
    <category>Scripts</category>
    <add>First time...</add>
    <create>firsttime</create>

    <control>
      <controltype>label</controltype>
      <caption>The first time,</caption>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>0</attribute>
      <caption>Run script</caption>
    </control>
    
    <control>
      <controltype>label</controltype>
      <caption>Otherwise</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>1</attribute>
      <caption>Run script</caption>
    </control>    
  </editor>

  <editor>
    <appliesto>for</appliesto>
    <display>For #0 values #1 to #2, run: #4</display>
    <category>Scripts</category>
    <add>For...</add>
    <create>for (,,,1)</create>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>For: loop variable</caption>
    </control>

    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>from</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>number</simple>
      <simpleeditor>number</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>to</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>2</attribute>
      <simple>number</simple>
      <simpleeditor>number</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>in steps of</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>3</attribute>
      <simple>number</simple>
      <simpleeditor>number</simpleeditor>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>4</attribute>
      <caption>Run script</caption>
      <breakbefore/>
    </control>
  </editor>

  <editor>
    <appliesto>foreach</appliesto>
    <display>For each #0 in #1, run: #2</display>
    <category>Scripts</category>
    <add>For each...</add>
    <create>foreach (,)</create>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>For each: loop variable</caption>
    </control>

    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>in source</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <usetemplates>foreach</usetemplates>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>2</attribute>
      <caption>Run script</caption>
      <breakbefore/>
    </control>
  </editor>

  <editor>
    <appliesto>switch</appliesto>
    <display>Switch #0: (#1 cases), Default: #2</display>
    <category>Scripts</category>
    <add>Switch...</add>
    <create>switch ()</create>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>Switch:</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>Cases:</caption>
      <breakbefore/>
    </control>

    <!-- TO DO: Popup needs to have ExpressionControl in it -->

    <control>
      <controltype>scriptdictionary</controltype>
      <caption>Cases</caption>
      <attribute>1</attribute>
      <keyprompt>Please enter the case expression</keyprompt>
    </control>

    <control>
      <breakbefore/>
      <controltype>script</controltype>
      <caption>Default</caption>
      <attribute>2</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>while</appliesto>
    <display>While #0 is true, run: #1</display>
    <category>Scripts</category>
    <add>While...</add>
    <create>while ()</create>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>While</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>is true,</caption>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>1</attribute>
      <caption>Run script</caption>
      <breakbefore/>
    </control>
  </editor>

  <editor>
    <appliesto>()</appliesto>
    <display>Call function #0 (#1 parameters)</display>
    <category>Scripts</category>
    <add>Call function</add>
    <create type="string"></create>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>Call function</caption>
    </control>

    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>with parameters:</caption>
    </control>

    <!-- TO DO: Popup needs to have ExpressionControl in it -->

    <control>
      <controltype>list</controltype>
      <caption>Parameters</caption>
      <attribute>1</attribute>
      <editprompt>Please enter the parameter</editprompt>
    </control>
  </editor>

  <editor>
    <appliesto>do</appliesto>
    <!-- TO DO: Don't display parameter #2 if it's null or empty -->
    <display>Run #0's '#1' script with parameters from dictionary #2</display>
    <category>Scripts</category>
    <add>Run an object's script attribute</add>
    <create>do (,"")</create>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>Run object</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>name</simple>
      <simpleeditor>objects</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>script attribute</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>name</simple>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>Using parameter dictionary</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>2</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>invoke</appliesto>
    <!-- TO DO: Don't display parameter #1 if it's null or empty -->
    <display>Run '#0' script with parameters from dictionary #1</display>
    <category>Scripts</category>
    <add>Run a script returned by an expression</add>
    <create>invoke ()</create>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>Invoke script</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>Using parameter dictionary</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>error</appliesto>
    <display>Raise error #0</display>
    <category>Scripts</category>
    <create>error ("")</create>
    <add>Raise an error</add>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>Raise error</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>text</simple>
    </control>
  </editor>

  <editor>
    <appliesto>return</appliesto>
    <display>Return #0</display>
    <category>Scripts</category>
    <create>return ()</create>
    <add>Set this function's return value</add>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>Set this function's return value to</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>rundelegate</appliesto>
    <display>Run #0's #1 delegate implementation (#2 parameters)</display>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>Run delegate implementation of object</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>name</simple>
      <simpleeditor>objects</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>Attribute:</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>name</simple>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>With parameters:</caption>
      <breakbefore/>
    </control>

    <!-- TO DO: Popup needs to have ExpressionControl in it -->

    <control>
      <controltype>list</controltype>
      <caption>Parameters</caption>
      <attribute>2</attribute>
      <editprompt>Please enter the parameter</editprompt>
    </control>
  </editor>

  <editor>
    <appliesto>on ready</appliesto>
    <display>When ready, run: #0</display>

    <control>
      <controltype>label</controltype>
      <caption>When ready,</caption>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>0</attribute>
      <caption>Run script</caption>
    </control>
  </editor>
</library>