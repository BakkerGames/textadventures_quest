<library>

  <include ref="GamebookCoreEditor.aslx"/>

  <type name="defaultgame">
    <_editorstyle>gamebook</_editorstyle>
    <defaultfont>Arial</defaultfont>
    <defaultfontsize type="int">9</defaultfontsize>
    <defaultbackground>White</defaultbackground>
    <defaultforeground>Black</defaultforeground>
    <defaultlinkforeground>Blue</defaultlinkforeground>
    <menufont>Arial</menufont>
    <menufontsize type="int">9</menufontsize>
    <menubackground>White</menubackground>
    <menuforeground>Black</menuforeground>
    <menuhoverbackground>LightGrey</menuhoverbackground>
    <menuhoverforeground>Black</menuhoverforeground>
  </type>

  <type name="defaultobject">
    <description type="string"></description>
  </type>

  <type name="defaultplayer">
    <changedparent type="script">
      DoPage(player.parent)
    </changedparent>
  </type>

  <function name="InitInterface">
    request (FontName, game.defaultfont)
    request (FontSize, ToString(game.defaultfontsize))
    request (Background, game.defaultbackground)
    request (Foreground, game.defaultforeground)
    request (LinkForeground, game.defaultlinkforeground)
    request (RunScript, "SetMenuBackground;" + game.menubackground)
    request (RunScript, "SetMenuForeground;" + game.menuforeground)
    request (RunScript, "SetMenuHoverBackground;" + game.menuhoverbackground)
    request (RunScript, "SetMenuHoverForeground;" + game.menuhoverforeground)
    request (RunScript, "SetMenuFontName;" + game.menufont)
    request (RunScript, "SetMenuFontSize;" + game.menufontsize + "pt")
    request (Hide, "Panes")
    request (Hide, "Command")
    request (Hide, "Location")
  </function>

  <function name="StartGame">
    DoPage(player.parent)
  </function>

  <function name="ScopeInventory" type="objectlist">
    result = NewObjectList()
    return (result)
  </function>

  <function name="GetPlacesObjectsList" type="objectlist">
    result = NewObjectList()
    return (result)
  </function>

  <function name="ScopeExits" type="objectlist">
    result = NewObjectList()
    return (result)
  </function>

  <function name="HandleCommand" parameters="command">
    if (DictionaryContains(player.parent.options, command)) {
      newpage = GetObject(command)
      if (newpage = null) {
        msg ("Error - no page named '" + command + "'")
      }
      else {
        player.parent = GetObject(command)
      }
    }
    else {
      msg ("Error - '" + command + "' is not a valid option for this page")
    }
  </function>

  <function name="DoPage" parameters="page">
    msg ("DoPage...")
    request (ClearScreen, "")
    if (HasString(player.parent, "picture")) {
      picture (player.parent.picture)
      msg ("")
    }
    msg (player.parent.description)
    msg ("")
    msg ("")
    if (TypeOf(player.parent, "options") = "stringdictionary") {
      foreach (key, player.parent.options) {
        msg (CommandLink(key, StringDictionaryItem(player.parent.options, key)))
        msg ("")
      }
    }
  </function>

  <function name="CommandLink" type="string" parameters="cmd, text">
    <![CDATA[
    return ("<command input=\"" + cmd + "\">" + text + "</command>")
    ]]>
  </function>

</library>
