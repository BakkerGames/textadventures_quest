<library>

  <include ref="CoreOutput.aslx"/>
  <include ref="CoreEffects.aslx"/>
  <include ref="GamebookCoreEditor.aslx"/>

  <type name="defaultgame">
    <_editorstyle>gamebook</_editorstyle>
    <defaultfont>Georgia, serif</defaultfont>
    <defaultfontsize type="int">12</defaultfontsize>
    <defaultbackground>White</defaultbackground>
    <defaultforeground>Black</defaultforeground>
    <defaultlinkforeground>Blue</defaultlinkforeground>
    <menufont>Arial</menufont>
    <menufontsize type="int">9</menufontsize>
    <menubackground>White</menubackground>
    <menuforeground>Black</menuforeground>
    <menuhoverbackground>LightGrey</menuhoverbackground>
    <menuhoverforeground>Black</menuhoverforeground>
    <description type="string"></description>
  </type>

  <type name="defaultobject">
    <description type="string"></description>
  </type>

  <type name="defaultplayer">
    <changedparent type="script">
      DoPage(player.parent)
    </changedparent>
  </type>

  <type name="picture">
  </type>

  <type name="youtube">
  </type>

  <type name="link">
    <address>http://</address>
  </type>

  <type name="script">
    <runscript/>
  </type>

  <template name="NothingToUndo">Nothing to undo!</template>

  <function name="InitInterface">
    request (Background, game.defaultbackground)
    request (Foreground, game.defaultforeground)
    request (LinkForeground, game.defaultlinkforeground)
    JS.SetMenuBackground(game.menubackground)
    JS.SetMenuForeground(game.menuforeground)
    JS.SetMenuHoverBackground(game.menuhoverbackground)
    JS.SetMenuHoverForeground(game.menuhoverforeground)
    JS.SetMenuFontName(game.menufont)
    JS.SetMenuFontSize(game.menufontsize + "pt")
    request (Hide, "Panes")
    request (Hide, "Command")
    request (Hide, "Location")
  </function>

  <function name="StartGame">
    DoPage(player.parent)
  </function>

  <function name="ScopeInventory" type="objectlist">
    result = NewObjectList()
    return (result)
  </function>

  <function name="GetPlacesObjectsList" type="objectlist">
    result = NewObjectList()
    return (result)
  </function>

  <function name="ScopeExits" type="objectlist">
    result = NewObjectList()
    return (result)
  </function>

  <function name="HandleCommand" parameters="command">
    if (command = "undo") {
      // ignore
    }
    else {
      newpage = GetObject(command)
      if (newpage = null) {
        msg ("Error - no page named '" + command + "'")
      }
      else {
        player.parent = GetObject(command)
      }
    }
  </function>

  <function name="DoPage" parameters="page">
    <![CDATA[
    request (ClearScreen, "")
    stop sound
    if (GetBoolean(player.parent, "runscript")) {
      if (HasScript(player.parent, "script")) {
        do (player.parent, "script")
      }
      else {
        msg ("No script has been created for this page.")
      }
    }
    else {
      if (HasString(player.parent, "sound")) {
        if (LengthOf(player.parent.sound) > 0) {
          play sound (player.parent.sound, false, false)
        }
      } 
    
      if (HasString(player.parent, "picture")) {
        if (LengthOf(player.parent.picture) > 0) {
          picture (player.parent.picture)
          msg ("")
        }
      }
      if (HasString(player.parent, "youtube")) {
        if (LengthOf(player.parent.youtube) > 0) {
          JS.AddYouTube(player.parent.youtube)
          msg ("")
          msg ("")
        }
      }
      msg (player.parent.description)
      msg ("")
      msg ("")
      if (TypeOf(player.parent, "options") = "stringdictionary") {
        foreach (key, player.parent.options) {
          destination = GetObject(key)
          if (destination = null) {
            msg (StringDictionaryItem(player.parent.options, key) + " (broken link)")
          }
          else {
            if (DoesInherit(destination, "link")) {
              msg ("<a href=\"" + destination.address + "\">" + StringDictionaryItem(player.parent.options, key) + "</a>")
            }
            else {
              msg (CommandLink(key, StringDictionaryItem(player.parent.options, key)))
            }
          }
          msg ("")
        }
      }
    }
    ]]>
  </function>

  <function name="RandomChance" parameters="percentile" type="boolean">
    <![CDATA[
    return (GetRandomInt(1,100) <= percentile)
    ]]>
  </function>

</library>
