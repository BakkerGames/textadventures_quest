<library>

  <implied element="editor" property="pattern" type="simplepattern"/>
  
  <!-- Templates for "if" -->

  <editor>
    <pattern>GetBoolean(#object#, #flag#)</pattern>
    <create>GetBoolean(, "")</create>
    <description>object has flag</description>
    <expressiontype>if</expressiontype>

    <control>
      <controltype>expression</controltype>
      <simple>object</simple>
      <simpleeditor>objects</simpleeditor>
      <attribute>object</attribute>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>flag name</simple>
      <attribute>flag</attribute>
    </control>
  </editor>

  <editor>
    <pattern>not GetBoolean(#object#, #flag#)</pattern>
    <create>not GetBoolean(, "")</create>
    <description>object does not have flag</description>
    <expressiontype>if</expressiontype>

    <control>
      <controltype>expression</controltype>
      <simple>object</simple>
      <simpleeditor>objects</simpleeditor>
      <attribute>object</attribute>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>flag name</simple>
      <attribute>flag</attribute>
    </control>
  </editor>


  <editor>
    <pattern>Got(#object#)</pattern>
    <create>Got()</create>
    <description>player is carrying object</description>
    <expressiontype>if</expressiontype>

    <control>
      <controltype>expression</controltype>
      <simple>object</simple>
      <simpleeditor>objects</simpleeditor>
      <attribute>object</attribute>
    </control>
  </editor>

  <editor>
    <pattern>not Got(#object#)</pattern>
    <create>not Got()</create>
    <description>player is not carrying object</description>
    <expressiontype>if</expressiontype>

    <control>
      <controltype>expression</controltype>
      <simple>object</simple>
      <simpleeditor>objects</simpleeditor>
      <attribute>object</attribute>
    </control>
  </editor>


  <editor>
    <pattern>IsSwitchedOn(#object#)</pattern>
    <create>IsSwitchedOn()</create>
    <description>object is switched on</description>
    <expressiontype>if</expressiontype>

    <control>
      <controltype>expression</controltype>
      <simple>object</simple>
      <simpleeditor>objects</simpleeditor>
      <attribute>object</attribute>
    </control>
  </editor>

  <editor>
    <pattern>not IsSwitchedOn(#object#)</pattern>
    <create>not IsSwitchedOn()</create>
    <description>object is switched off</description>
    <expressiontype>if</expressiontype>

    <control>
      <controltype>expression</controltype>
      <simple>object</simple>
      <simpleeditor>objects</simpleeditor>
      <attribute>object</attribute>
    </control>
  </editor>

  <editor>
    <pattern>ListContains(ScopeVisible(), #object#)</pattern>
    <create>ListContains(ScopeVisible(), )</create>
    <description>object is visible</description>
    <expressiontype>if</expressiontype>

    <control>
      <controltype>expression</controltype>
      <simple>object</simple>
      <simpleeditor>objects</simpleeditor>
      <attribute>object</attribute>
    </control>
  </editor>
  
  <editor>
    <pattern>ListContains(ScopeReachable(), #object#)</pattern>
    <create>ListContains(ScopeReachable(), )</create>
    <description>object is reachable</description>
    <expressiontype>if</expressiontype>

    <control>
      <controltype>expression</controltype>
      <simple>object</simple>
      <simpleeditor>objects</simpleeditor>
      <attribute>object</attribute>
    </control>
  </editor>

  <editor>
    <pattern>Contains (#object1#,#object2#)</pattern>
    <create>Contains (,)</create>
    <description>object contains</description>
    <expressiontype>if</expressiontype>

    <control>
      <controltype>label</controltype>
      <caption>Parent:</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>object</simple>
      <simpleeditor>objects</simpleeditor>
      <attribute>object1</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>Contains child:</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>object</simple>
      <simpleeditor>objects</simpleeditor>
      <attribute>object2</attribute>
    </control>
  </editor>

  <editor>
    <pattern>#object#.#property# = #value#</pattern>
    <create>. = </create>
    <description>object property</description>
    <expressiontype>if</expressiontype>

    <control>
      <controltype>label</controltype>
      <caption>Object</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>object</simple>
      <simpleeditor>objects</simpleeditor>
      <attribute>object</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>Property</caption>
    </control>

    <control>
      <controltype>textbox</controltype>
      <attribute>property</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>=</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>value</attribute>
    </control>

  </editor>

  <editor>
    <pattern>Ask(#question#)</pattern>
    <create>Ask("")</create>
    <description>player answers "Yes" to</description>
    <expressiontype>if</expressiontype>

    <control>
      <controltype>expression</controltype>
      <simple>question</simple>
      <attribute>question</attribute>
    </control>
  </editor>

  <editor>
    <pattern>RandomChance(#percentile#)</pattern>
    <create>RandomChance(50)</create>
    <description>random chance</description>
    <expressiontype>if</expressiontype>

    <control>
      <controltype>expression</controltype>
      <simple>percentage</simple>
      <simpleeditor>number</simpleeditor>
      <attribute>percentile</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>% of the time</caption>
    </control>
  </editor>
  
  <!-- Templates for "set" -->

  <editor>
    <pattern>GetInput()</pattern>
    <create>GetInput()</create>
    <description>player input</description>
    <expressiontype>set</expressiontype>
  </editor>

  <editor>
    <pattern>NewStringList()</pattern>
    <create>NewStringList()</create>
    <description>new string list</description>
    <expressiontype>set</expressiontype>
  </editor>

  <editor>
    <pattern>NewObjectList()</pattern>
    <create>NewObjectList()</create>
    <description>new object list</description>
    <expressiontype>set</expressiontype>
  </editor>

  <editor>
    <pattern>NewStringDictionary()</pattern>
    <create>NewStringDictionary()</create>
    <description>new string dictionary</description>
    <expressiontype>set</expressiontype>
  </editor>

  <editor>
    <pattern>NewObjectDictionary()</pattern>
    <create>NewObjectDictionary()</create>
    <description>new object dictionary</description>
    <expressiontype>set</expressiontype>
  </editor>

  <editor>
    <pattern>GetRandomInt(#min#,#max#)</pattern>
    <create>GetRandomInt(1,10)</create>
    <description>random number</description>
    <expressiontype>set</expressiontype>

    <control>
      <controltype>label</controltype>
      <caption>between</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>number</simple>
      <simpleeditor>number</simpleeditor>
      <attribute>min</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>and</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>number</simple>
      <simpleeditor>number</simpleeditor>
      <attribute>max</attribute>
    </control>

  </editor>
  
  <!-- Templates for "foreach" -->

  <editor>
    <pattern>AllObjects()</pattern>
    <create>AllObjects()</create>
    <description>all objects</description>
    <expressiontype>foreach</expressiontype>
  </editor>

  <editor>
    <pattern>ScopeVisible()</pattern>
    <create>ScopeVisible()</create>
    <description>all visible objects</description>
    <expressiontype>foreach</expressiontype>
  </editor>

  <editor>
    <pattern>ScopeInventory()</pattern>
    <create>ScopeInventory()</create>
    <description>the inventory</description>
    <expressiontype>foreach</expressiontype>
  </editor>
  
  <editor>
    <pattern>AllExits()</pattern>
    <create>AllExits()</create>
    <description>all exits</description>
    <expressiontype>foreach</expressiontype>
  </editor>

  <editor>
    <pattern>AllCommands()</pattern>
    <create>AllCommands()</create>
    <description>all commands</description>
    <expressiontype>foreach</expressiontype>
  </editor>

</library>