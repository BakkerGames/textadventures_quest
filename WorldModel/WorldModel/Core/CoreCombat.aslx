<library>
  <function name="DiceRoll" parameters="dicetype" type="int">
    dpos = Instr(dicetype, "d")
    if (dpos = 0) {
      error ("Invalid dice type: " + dicetype)
    }
    else {
      number_string = Left(dicetype, dpos - 1)
      sides_string = Mid(dicetype, dpos + 1)
      if (not (IsNumeric(number_string) and IsNumeric(sides_string))) {
        error ("Invalid dice type: " + dicetype)
      }
      else {
        number = ToInt(number_string)
        sides = ToInt(sides_string)
        total = 0
        for (i, 1, number) {
          total = total + GetRandomInt(1, sides)
        }
        return (total)
      }
    }
  </function>
  
  <function name="PickOneObject" parameters="lst" type="object">
    n = ListCount(lst)
    if (n = 0) return (null)
    index = GetRandomInt(0, n - 1)
    return (ObjectListItem(lst, index))
  </function>
  
  <function name="PickOneString" parameters="lst" type="string">
    if (TypeOf(lst) = "string") {
      lst = Split(lst, ";")
    }
    n = ListCount(lst)
    if (n = 0) return ("")
    index = GetRandomInt(0, n - 1)
    return (StringListItem(lst, index))
  </function>
  
  <function name="PickOneChild" parameters="obj" type="object">
    return (PickOneObject(GetDirectChildren(obj)))
  </function>
  
  <function name="PickOneChildOfType" parameters="room, typename" type="object">
    l = NewObjectList()
    foreach (o, GetDirectChildren(room)) {
      if (DoesInherit(o, typename)) {
        list add (l, o)
      }
    }
    return (PickOneObject(l))
  </function>
    
  <function name="PickOneExit" parameters="room" type="object">
    return (PickOneObject(ScopeExitsForRoom (room)))
  </function> 
  
  <function name="PickOneUnlockedExit" parameters="room" type="object">
    return (PickOneObject(ScopeUnlockedExitsForRoom (room)))
  </function> 
  
    
  
</library>