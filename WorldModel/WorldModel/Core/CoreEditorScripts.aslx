<library>

  <!-- Output -->

  <editor>
    <appliesto>msg</appliesto>
    <display>Print #0</display>
    <category>Output</category>
    <create>msg ("")</create>
    <add>Print a message</add>

    <control>
      <controltype>label</controltype>
      <caption>Print</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>message</simple>
      <expand/>
      <multiline/>
    </control>
  </editor>

  <editor>
    <appliesto>picture</appliesto>
    <display>Show picture #0</display>
    <category>Output</category>
    <create>picture ("")</create>
    <add>Show a picture</add>

    <control>
      <controltype>label</controltype>
      <caption>Show picture</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>filename</simple>
      <simpleeditor>file</simpleeditor>
      <source>[EditorImageFormats]</source>
      <filefiltername>Picture Files</filefiltername>
    </control>
  </editor>

  <editor>
    <appliesto>(function)SetFramePicture</appliesto>
    <display>Set frame picture #0</display>
    <category>Output</category>
    <create>SetFramePicture ("")</create>
    <add>Set frame picture</add>

    <control>
      <controltype>label</controltype>
      <caption>Set frame picture</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>filename</simple>
      <simpleeditor>file</simpleeditor>
      <source>[EditorImageFormats]</source>
      <filefiltername>Picture Files</filefiltername>
    </control>
  </editor>

  <editor>
    <appliesto>(function)ClearFramePicture</appliesto>
    <display>Clear frame picture</display>
    <category>Output</category>
    <create>ClearFramePicture</create>
    <add>Clear frame picture</add>

    <control>
      <controltype>label</controltype>
      <caption>Clear frame picture</caption>
    </control>
  </editor>

  <editor>
    <appliesto>(function)ClearScreen</appliesto>
    <display>Clear the screen</display>
    <category>Output</category>
    <create>ClearScreen</create>
    <add>Clear the screen</add>

    <control>
      <controltype>label</controltype>
      <caption>Clear the screen</caption>
    </control>
  </editor>

  <editor>
    <appliesto>(function)SetForegroundColour</appliesto>
    <display>Change foreground colour to #0</display>
    <category>Output</category>
    <create>SetForegroundColour ("Black")</create>
    <add>Change foreground colour</add>

    <control>
      <controltype>label</controltype>
      <caption>Change the foreground colour to</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>colour</simple>
      <simpleeditor>dropdown</simpleeditor>
      <attribute>0</attribute>
      <validvalues type="list">[HTMLColorNames]</validvalues>
      <freetext/>
    </control>
  </editor>

  <editor>
    <appliesto>(function)SetBackgroundColour</appliesto>
    <display>Change background colour to #0</display>
    <category>Output</category>
    <create>SetBackgroundColour ("White")</create>
    <add>Change background colour</add>

    <control>
      <controltype>label</controltype>
      <caption>Change the background colour to</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>colour</simple>
      <simpleeditor>dropdown</simpleeditor>
      <attribute>0</attribute>
      <validvalues type="list">[HTMLColorNames]</validvalues>
      <freetext/>
    </control>
  </editor>

  <editor>
    <appliesto>(function)SetFontName</appliesto>
    <display>Change font to #0</display>
    <category>Output</category>
    <create>SetFontName ("Arial")</create>
    <add>Change font</add>

    <control>
      <controltype>label</controltype>
      <caption>Change the font to</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>name</simple>
      <simpleeditor>dropdown</simpleeditor>
      <attribute>0</attribute>
      <fontslist/>
      <freetext/>
    </control>
  </editor>

  <editor>
    <appliesto>(function)SetFontSize</appliesto>
    <display>Change font size to #0</display>
    <category>Output</category>
    <create>SetFontSize (9)</create>
    <add>Change font size</add>

    <control>
      <controltype>label</controltype>
      <caption>Change the font size to</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>size</simple>
      <simpleeditor>number</simpleeditor>
      <attribute>0</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>(function)PrintCentered</appliesto>
    <display>Print (centered) #0</display>
    <category>Output</category>
    <create>PrintCentered ("")</create>
    <add>Print a centered message</add>

    <control>
      <controltype>label</controltype>
      <caption>Print (centered)</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>message</simple>
      <expand/>
      <multiline/>
    </control>
  </editor>

  <editor>
    <appliesto>play sound</appliesto>
    <display>Play sound #0</display>
    <category>Output</category>
    <create>play sound ("", false, false)</create>
    <add>Play a sound</add>

    <control>
      <controltype>label</controltype>
      <caption>Play sound</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>filename</simple>
      <simpleeditor>file</simpleeditor>
      <source>*.wav;*.mp3</source>
      <filefiltername>Sound Files</filefiltername>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>Wait for sound to finish before continuing:</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simpleeditor>boolean</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>Loop:</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>2</attribute>
      <simpleeditor>boolean</simpleeditor>
    </control>

  </editor>

  <editor>
    <appliesto>stop sound</appliesto>
    <display>Stop sound</display>
    <category>Output</category>
    <create>stop sound</create>
    <add>Stop sound</add>

    <control>
      <controltype>label</controltype>
      <caption>Stop sound</caption>
    </control>
  </editor>

  <editor>
    <appliesto>(function)ShowYouTube</appliesto>
    <display>Play YouTube video #0</display>
    <category>Output</category>
    <create>ShowYouTube ("")</create>
    <add>Play YouTube video</add>

    <control>
      <controltype>label</controltype>
      <caption>Play YouTube video</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>id</simple>
    </control>
  </editor>

  <editor>
    <appliesto>(function)ShowVimeo</appliesto>
    <display>Play Vimeo video #0</display>
    <category>Output</category>
    <create>ShowVimeo ("")</create>
    <add>Play Vimeo video</add>

    <control>
      <controltype>label</controltype>
      <caption>Play Vimeo video</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>id</simple>
    </control>
  </editor>

  <editor>
    <appliesto>insert</appliesto>
    <display>Insert HTML from file #0</display>
    <category>Output</category>
    <create>insert ("")</create>
    <add>Insert HTML from a file</add>

    <control>
      <controltype>label</controltype>
      <caption>Insert HTML from</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>filename</simple>
      <simpleeditor>file</simpleeditor>
      <source>*.htm;*.html</source>
      <filefiltername>HTML Files</filefiltername>
    </control>
  </editor>

  <editor>
    <appliesto>request</appliesto>
    <display>Raise UI request "#0" (parameter #1)</display>
    <category>Output</category>
    <create>request (ClearScreen,)</create>
    <add>Raise a UI request</add>

    <control>
      <controltype>label</controltype>
      <caption>Raise UI request</caption>
    </control>

    <control>
      <controltype>dropdown</controltype>
      <validvalues type="list">Quit;UpdateLocation;GameName;FontName;FontSize;Background;Foreground;LinkForeground;RunScript;SetStatus;ClearScreen;PanesVisible;ShowPicture;Show;Hide;SetCompassDirections;Pause</validvalues>
      <caption>Request</caption>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>with parameter</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>string</simple>
    </control>
  </editor>

  <!-- Objects -->

  <editor>
    <appliesto>create</appliesto>
    <display>Create object named #0</display>
    <category>Objects</category>
    <create>create ("")</create>
    <add>Create an object</add>

    <control>
      <controltype>label</controltype>
      <caption>Create object</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>name</simple>
    </control>
  </editor>

  <editor>
    <appliesto>create exit</appliesto>
    <display>Create exit #0 from #1 to #2</display>
    <category>Objects</category>
    <create>create exit ("",,)</create>
    <add>Create an exit</add>

    <control>
      <controltype>label</controltype>
      <caption>Create exit</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>name</simple>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>from</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>room</simple>
      <simpleeditor>objects</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>to</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>2</attribute>
      <simple>room</simple>
      <simpleeditor>objects</simpleeditor>
    </control>
  </editor>

  <editor>
    <appliesto>destroy</appliesto>
    <display>Destroy #0</display>
    <category>Objects</category>
    <create>destroy ("")</create>
    <add>Destroy an object</add>

    <control>
      <controltype>label</controltype>
      <caption>Destroy object</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>name</simple>
    </control>
  </editor>

  <!-- Scripts -->

  <editor>
    <appliesto>if</appliesto>
    <category>Scripts</category>
    <add>If...</add>
    <create>if ()</create>
    <!-- note: "if" has its own special editor, so it doesn't have any editor definition in this file -->
  </editor>

  <editor>
    <appliesto>for</appliesto>
    <display>For #0 values #1 to #2, run: #3</display>
    <category>Scripts</category>
    <add>For...</add>
    <create>for (,,)</create>

    <control>
      <controltype>label</controltype>
      <caption>For: loop variable</caption>
    </control>

    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>from</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>number</simple>
      <simpleeditor>number</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>to</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>2</attribute>
      <simple>number</simple>
      <simpleeditor>number</simpleeditor>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>3</attribute>
      <caption>Run script</caption>
      <breakbefore/>
    </control>
  </editor>

  <editor>
    <appliesto>foreach</appliesto>
    <display>For each #0 in #1, run: #2</display>
    <category>Scripts</category>
    <add>For each...</add>
    <create>foreach (,)</create>

    <control>
      <controltype>label</controltype>
      <caption>For each: loop variable</caption>
    </control>

    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>in source</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <usetemplates>foreach</usetemplates>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>2</attribute>
      <caption>Run script</caption>
      <breakbefore/>
    </control>
  </editor>

  <editor>
    <appliesto>switch</appliesto>
    <display>Switch #0: (#1 cases), Default: #2</display>
    <category>Scripts</category>
    <add>Switch...</add>
    <create>switch ()</create>

    <control>
      <controltype>label</controltype>
      <caption>Switch:</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>Cases:</caption>
      <breakbefore/>
    </control>

    <!-- TO DO: Popup needs to have ExpressionControl in it -->

    <control>
      <controltype>scriptdictionary</controltype>
      <caption>Cases</caption>
      <attribute>1</attribute>
      <keyprompt>Please enter the case expression</keyprompt>
    </control>

    <control>
      <breakbefore/>
      <controltype>script</controltype>
      <caption>Default</caption>
      <attribute>2</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>()</appliesto>
    <display>Call function #0 (#1 parameters)</display>
    <category>Scripts</category>
    <add>Call function</add>
    <create></create>

    <control>
      <controltype>label</controltype>
      <caption>Call function</caption>
    </control>

    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>with parameters:</caption>
    </control>

    <!-- TO DO: Popup needs to have ExpressionControl in it -->

    <control>
      <controltype>list</controltype>
      <caption>Parameters</caption>
      <attribute>1</attribute>
      <editprompt>Please enter the parameter</editprompt>
    </control>
  </editor>

  <editor>
    <appliesto>do</appliesto>
    <!-- TO DO: Don't display parameter #2 if it's null or empty -->
    <display>Run #0's '#1' script with parameters from dictionary #2</display>
    <category>Scripts</category>
    <add>Run an object's script property</add>
    <create>do (,"")</create>

    <control>
      <controltype>label</controltype>
      <caption>Run object</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>name</simple>
      <simpleeditor>objects</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>script property</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>name</simple>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>Using parameter dictionary</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>2</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>invoke</appliesto>
    <!-- TO DO: Don't display parameter #1 if it's null or empty -->
    <display>Run '#0' script with parameters from dictionary #1</display>
    <category>Scripts</category>
    <add>Run a script returned by an expression</add>
    <create>invoke ()</create>

    <control>
      <controltype>label</controltype>
      <caption>Invoke script</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>Using parameter dictionary</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>error</appliesto>
    <display>Raise error #0</display>
    <category>Scripts</category>
    <create>error ("")</create>
    <add>Raise an error</add>

    <control>
      <controltype>label</controltype>
      <caption>Raise error</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>text</simple>
    </control>
  </editor>

  <editor>
    <appliesto>return</appliesto>
    <display>Return #0</display>
    <category>Scripts</category>
    <create>return ()</create>
    <add>Set this function's return value</add>

    <control>
      <controltype>label</controltype>
      <caption>Set this function's return value to</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>rundelegate</appliesto>
    <display>Run #0's #1 delegate implementation (#2 parameters)</display>
    <category>Scripts</category>
    <create>rundelegate (,"","")</create>
    <add>Run an object's delegate implementation</add>

    <control>
      <controltype>label</controltype>
      <caption>Run delegate implementation of object</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>name</simple>
      <simpleeditor>objects</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>Property:</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>name</simple>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>With parameters:</caption>
      <breakbefore/>
    </control>

    <!-- TO DO: Popup needs to have ExpressionControl in it -->

    <control>
      <controltype>list</controltype>
      <caption>Parameters</caption>
      <attribute>2</attribute>
      <editprompt>Please enter the parameter</editprompt>
    </control>
  </editor>

  <!-- Variables -->

  <editor>
    <appliesto>(function)SetObjectFlagOn</appliesto>
    <display>Set #0 flag #1</display>
    <category>Variables</category>
    <add>Set object flag</add>
    <create>SetObjectFlagOn (,"")</create>

    <control>
      <controltype>label</controltype>
      <caption>Set flag</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>object</simple>
      <simpleeditor>objects</simpleeditor>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>flag name</simple>
      <attribute>1</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>(function)SetObjectFlagOff</appliesto>
    <display>Unset #0 flag #1</display>
    <category>Variables</category>
    <add>Unset object flag</add>
    <create>SetObjectFlagOff (,"")</create>

    <control>
      <controltype>label</controltype>
      <caption>Unset flag</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>object</simple>
      <simpleeditor>objects</simpleeditor>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>expression</controltype>
      <simple>flag name</simple>
      <attribute>1</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>=</appliesto>
    <display>Set #0 = #1</display>
    <category>Variables</category>
    <add>Set a variable or property</add>
    <create>=</create>

    <control>
      <controltype>label</controltype>
      <caption>Set variable</caption>
    </control>

    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>=</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <usetemplates>set</usetemplates>
      <attribute>1</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>=></appliesto>
    <display>Set #0 script: #1</display>
    <category>Variables</category>
    <add>Set a variable or property to a script</add>
    <create>=></create>

    <control>
      <controltype>label</controltype>
      <caption>Set variable</caption>
    </control>

    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>= script:</caption>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>1</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>set</appliesto>
    <display>Set #0's #1 property to #2</display>
    <category>Variables</category>
    <add>Set an object's property (named by an expression)</add>
    <create>set (,"",)</create>

    <control>
      <controltype>label</controltype>
      <caption>Set object</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>name</simple>
      <simpleeditor>objects</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>Property:</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>Value:</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>2</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>list add</appliesto>
    <display>Add to list #0 value #1</display>
    <category>Variables</category>
    <add>Add a value to a list</add>
    <create>list add (,)</create>

    <control>
      <controltype>label</controltype>
      <caption>Add to list</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>value</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>text</simple>
    </control>
  </editor>

  <editor>
    <appliesto>list remove</appliesto>
    <display>Remove from list #0 value #1</display>
    <category>Variables</category>
    <add>Remove a value from a list</add>
    <create>list remove (,)</create>

    <control>
      <controltype>label</controltype>
      <caption>Remove from list</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>value</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>text</simple>
    </control>
  </editor>

  <editor>
    <appliesto>dictionary add</appliesto>
    <display>Add to dictionary #0: #1 = #2</display>
    <category>Variables</category>
    <add>Add a value to a dictionary</add>
    <create>dictionary add (,"",)</create>

    <control>
      <controltype>label</controltype>
      <caption>Add to dictionary</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>key</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>string</simple>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>value</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>2</attribute>
      <simple>string</simple>
    </control>
  </editor>

  <editor>
    <appliesto>dictionary remove</appliesto>
    <display>Remove from dictionary #0: #1</display>
    <category>Variables</category>
    <add>Remove a value from a dictionary</add>
    <create>dictionary remove (,"")</create>

    <control>
      <controltype>label</controltype>
      <caption>Remove from dictionary</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>key</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>string</simple>
    </control>
  </editor>

  <!-- Game State -->

  <editor>
    <appliesto>finish</appliesto>
    <display>Finish the game</display>
    <category>Game State</category>
    <add>Finish the game</add>
    <create>finish</create>

    <control>
      <controltype>label</controltype>
      <caption>Finish the game</caption>
    </control>
  </editor>

  <editor>
    <appliesto>undo</appliesto>
    <display>Undo one transaction</display>
    <category>Game State</category>
    <add>Undo</add>
    <create>undo</create>

    <control>
      <controltype>label</controltype>
      <caption>Undo one transaction</caption>
    </control>
  </editor>

  <editor>
    <appliesto>start transaction</appliesto>
    <display>Start transaction for command #0</display>
    <category>Game State</category>
    <add>Start transaction</add>
    <create>start transaction ("")</create>

    <control>
      <controltype>label</controltype>
      <caption>Start transaction for command</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>text</simple>
    </control>
  </editor>

  <!-- Timers -->

  <editor>
    <appliesto>(function)EnableTimer</appliesto>
    <display>Enable timer #0</display>
    <category>Timers</category>
    <create>EnableTimer ()</create>
    <add>Enable timer</add>

    <control>
      <controltype>label</controltype>
      <caption>Enable timer</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>

      <!-- TO DO: simpleeditor needs to be a dropdown timer list -->
    </control>
  </editor>

  <editor>
    <appliesto>(function)DisableTimer</appliesto>
    <display>Disable timer #0</display>
    <category>Timers</category>
    <create>DisableTimer ()</create>
    <add>Disable timer</add>

    <control>
      <controltype>label</controltype>
      <caption>Disable timer</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>

      <!-- TO DO: simpleeditor needs to be a dropdown timer list -->
    </control>
  </editor>

  <editor>
    <appliesto>(function)SetTimerInterval</appliesto>
    <display>Set timer #0 interval to #1</display>
    <category>Timers</category>
    <create>SetTimerInterval (,1)</create>
    <add>Set timer interval</add>

    <control>
      <controltype>label</controltype>
      <caption>Set timer</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>

      <!-- TO DO: simpleeditor needs to be a dropdown timer list -->
    </control>

    <control>
      <controltype>label</controltype>
      <caption>interval to</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>number</simple>
      <simpleeditor>number</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>seconds</caption>
    </control>

  </editor>

  <editor>
    <appliesto>(function)SetTimerScript</appliesto>
    <display>Set timer #0 script</display>
    <category>Timers</category>
    <create>SetTimerScript () { }</create>
    <add>Set timer script</add>

    <control>
      <controltype>label</controltype>
      <caption>Set timer</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>

      <!-- TO DO: simpleeditor needs to be a dropdown timer list -->
    </control>

    <control>
      <controltype>label</controltype>
      <caption>script to</caption>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>script</attribute>
    </control>

  </editor>

  <editor>
    <appliesto>(function)SetTimeout</appliesto>
    <display>Run script after #0 seconds</display>
    <category>Timers</category>
    <create>SetTimeout (1) { }</create>
    <add>Run script after a number of seconds</add>

    <control>
      <controltype>label</controltype>
      <caption>After</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>number</simple>
      <simpleeditor>number</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>seconds, run</caption>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>script</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>(function)Pause</appliesto>
    <display>Pause for #0 seconds</display>
    <category>Timers</category>
    <create>Pause (1)</create>
    <add>Pause the game</add>

    <control>
      <controltype>label</controltype>
      <caption>Pause for</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>number</simple>
      <simpleeditor>number</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>seconds</caption>
    </control>
  </editor>

  <editor>
    <appliesto>create timer</appliesto>
    <display>Create timer named #0</display>
    <category>Timers</category>
    <create>create timer ("")</create>
    <add>Create a timer</add>

    <control>
      <controltype>label</controltype>
      <caption>Create timer</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>name</simple>
    </control>
  </editor>

  <!-- Turn Scripts -->

  <editor>
    <appliesto>(function)EnableTurnScript</appliesto>
    <display>Enable turn script #0</display>
    <category>Turn Scripts</category>
    <create>EnableTurnScript ()</create>
    <add>Enable turn script</add>

    <control>
      <controltype>label</controltype>
      <caption>Enable turn script</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>

      <!-- TO DO: simpleeditor needs to be a dropdown turnscript list -->
    </control>
  </editor>

  <editor>
    <appliesto>(function)DisableTurnScript</appliesto>
    <display>Disable turn script #0</display>
    <category>Turn Scripts</category>
    <create>DisableTurnScript ()</create>
    <add>Disable turn script</add>

    <control>
      <controltype>label</controltype>
      <caption>Disable turn script</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>

      <!-- TO DO: simpleeditor needs to be a dropdown turnscript list -->
    </control>
  </editor>

  <editor>
    <appliesto>(function)SetTurnScript</appliesto>
    <display>Set turn script #0</display>
    <category>Turn Scripts</category>
    <create>SetTurnScript () { }</create>
    <add>Set turn script</add>

    <control>
      <controltype>label</controltype>
      <caption>Set turn script</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>

      <!-- TO DO: simpleeditor needs to be a dropdown turnscript list -->
    </control>

    <control>
      <controltype>label</controltype>
      <caption>script to</caption>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>script</attribute>
    </control>

  </editor>

  <editor>
    <appliesto>(function)SetTurnTimeout</appliesto>
    <display>Run script after #0 turns</display>
    <category>Turn Scripts</category>
    <create>SetTurnTimeout (1) { }</create>
    <add>Run script after a number of turns</add>

    <control>
      <controltype>label</controltype>
      <caption>After</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>number</simple>
      <simpleeditor>number</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>turns, run</caption>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>script</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>create turnscript</appliesto>
    <display>Create turn script named #0</display>
    <category>Turn Scripts</category>
    <create>create turnscript ("")</create>
    <add>Create a turn script</add>

    <control>
      <controltype>label</controltype>
      <caption>Create turn script</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>name</simple>
    </control>
  </editor>

</library>